{"ast":null,"code":"var _jsxFileName = \"/home/localuser/.gitcoin/submitted/elastos-dapp/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from 'next/router';\nimport Web3 from 'web3';\nimport Modal from '../components/Modal';\n\nclass IndexPg extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"connectWallet\", async () => {\n      localStorage.clear();\n      let eth = window.ethereum;\n\n      try {\n        const web3 = new Web3(eth);\n        await eth.enable();\n        const accounts = await web3.eth.getAccounts();\n        this.setState({\n          account: accounts[0]\n        });\n        localStorage.setItem('account', accounts[0]);\n        Router.push('/dashboard'); // ABI, Contract - Connect to SpendPool Pod\n\n        const abi = await web3.eth.abi.encodeFunctionSignature();\n        this.toggleModal;\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n    _defineProperty(this, \"checkAuth\", async () => {\n      var account = await localStorage.getItem('account');\n      (await account) ? this.setState({\n        isLoggedIn: true\n      }) : this.setState({\n        isLoggedIn: false\n      });\n\n      if (this.state.isLoggedIn === true) {\n        return Router.push('/dashboard');\n      } else {\n        return;\n      }\n    });\n\n    _defineProperty(this, \"toggleModal\", () => {\n      this.setState({\n        toggled: !this.state.toggled\n      });\n    });\n\n    _defineProperty(this, \"closeModal\", e => {\n      this.setState({\n        toggled: false\n      });\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      window.document.title = \"Elastic Storage\";\n      this.checkAuth();\n    });\n\n    _defineProperty(this, \"componentWillUnmount\", () => {});\n\n    this.state = {\n      isLoggedIn: false,\n      toggled: false\n    };\n    this.connectWallet = this.connectWallet.bind(this);\n    this.checkAuth = this.checkAuth.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, this.state.toggled ? __jsx(Modal, {\n      connect: this.connectWallet,\n      close: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }\n    }) : null, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 4\n      }\n    }, \"Elastic Storage\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }\n    }, \"A elastOS dApp built on top of Ionic and Hive with Trinity plugins.\"), __jsx(\"button\", {\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }\n    }, \"Connect your Metamask wallet\"));\n  }\n\n}\n\nexport default IndexPg;","map":{"version":3,"sources":["/home/localuser/.gitcoin/submitted/elastos-dapp/pages/index.js"],"names":["React","Component","ReactDOM","Router","Web3","Modal","IndexPg","constructor","props","localStorage","clear","eth","window","ethereum","web3","enable","accounts","getAccounts","setState","account","setItem","push","abi","encodeFunctionSignature","toggleModal","err","console","log","getItem","isLoggedIn","state","toggled","e","document","title","checkAuth","connectWallet","bind","closeModal","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from 'next/router';\n\nimport Web3 from 'web3';\nimport Modal from '../components/Modal';\n\nclass IndexPg extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoggedIn: false,\n\t\t\ttoggled: false,\n\t\t}\n\t\tthis.connectWallet = this.connectWallet.bind(this);\n\t\tthis.checkAuth = this.checkAuth.bind(this);\n\t\tthis.toggleModal = this.toggleModal.bind(this);\n\t\tthis.closeModal = this.closeModal.bind(this);\n\t}\n\n\tconnectWallet = async () => {\n\t\tlocalStorage.clear()\n\t\tlet eth = window.ethereum;\n\t\ttry {\n\t\t\tconst web3 = new Web3(eth);\n\t\t\tawait eth.enable();\n\t\t\tconst accounts = await web3.eth.getAccounts();\n\t\t\t\n\t\t\tthis.setState({ account: accounts[0] });\n\t\t\tlocalStorage.setItem('account', accounts[0]);\n\t\t\tRouter.push('/dashboard');\n\n\t\t\t// ABI, Contract - Connect to SpendPool Pod\n\t\t\tconst abi = await web3.eth.abi.encodeFunctionSignature();\n\n\t\t\tthis.toggleModal;\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\tcheckAuth = async () => {\n\t\tvar account = await localStorage.getItem('account');\n\t\tawait account ? this.setState({ isLoggedIn: true }) : this.setState({ isLoggedIn: false});\n\t\tif (this.state.isLoggedIn === true) {\n\t\t\treturn Router.push('/dashboard');\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\n\ttoggleModal = () => {\n\t\tthis.setState({toggled: !this.state.toggled});\n\t};\n\n\tcloseModal = (e) => {\n\t\tthis.setState({\n\t\t\ttoggled: false\n\t\t});\n\t}\n\n\tcomponentDidMount = () => {\n\t\twindow.document.title = \"Elastic Storage\";\n\t\tthis.checkAuth();\n\t}\n\n\tcomponentWillUnmount = () => {\n\n\t};\n\n\trender() {\n\t\treturn (\n\t\t<>\n\t\t\t{this.state.toggled ? <Modal connect={this.connectWallet} close={this.closeModal}/> : null}\n\t\t\t<h1>Elastic Storage</h1>\n\t\t\t<p>A elastOS dApp built on top of Ionic and Hive with Trinity plugins.</p>\n\t\t\t<button onClick={this.toggleModal}>\n\t\t\t\tConnect your Metamask wallet\n\t\t\t</button>\n\t\t</>);\n\t}\n\n}\n\nexport default IndexPg;\n"]},"metadata":{},"sourceType":"module"}