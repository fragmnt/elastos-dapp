{"ast":null,"code":"var _jsxFileName = \"/home/localuser/.gitcoin/submitted/elastos-dapp/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Web3 from 'web3';\nimport Modal from '../components/Modal';\n\nclass IndexPg extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"connectWallet\", async () => {\n      localStorage.clear();\n      let eth = window.ethereum;\n\n      try {\n        const web3 = new Web3(eth);\n        await eth.enable();\n        const accounts = await web3.eth.getAccounts();\n        this.setState({\n          account: accounts[0]\n        });\n        localStorage.setItem('account', accounts[0]);\n        Router.push('/dashboard'); // ABI, Contract - Connect to SpendPool Pod\n\n        const abi = await web3.eth.abi.encodeFunctionSignature();\n        this.toggleModal();\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n    _defineProperty(this, \"toggleModal\", () => {\n      this.setState({\n        toggled: !this.state.toggled\n      });\n    });\n\n    _defineProperty(this, \"closeModal\", e => {\n      this.setState({\n        toggled: false\n      });\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      window.document.title = \"Elastic Storage\";\n    });\n\n    _defineProperty(this, \"componentWillUnmount\", () => {});\n\n    this.state = {\n      isLoggedIn: false,\n      toggled: false\n    };\n    this.connectWallet = this.connectWallet.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, this.state.toggled ? __jsx(Modal, {\n      connect: this.connectWallet,\n      close: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 26\n      }\n    }) : null, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }\n    }, \"Elastic Storage\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }\n    }, \"A elastOS dApp built on top of Ionic and Hive with Trinity plugins.\"), __jsx(\"button\", {\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }\n    }, \"Connect your Metamask wallet\"));\n  }\n\n}\n\nexport default IndexPg;","map":{"version":3,"sources":["/home/localuser/.gitcoin/submitted/elastos-dapp/pages/index.js"],"names":["React","Component","ReactDOM","Web3","Modal","IndexPg","constructor","props","localStorage","clear","eth","window","ethereum","web3","enable","accounts","getAccounts","setState","account","setItem","Router","push","abi","encodeFunctionSignature","toggleModal","err","console","log","toggled","state","e","document","title","isLoggedIn","connectWallet","bind","closeModal","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAE/BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,2CAWH,YAAY;AAC3BC,MAAAA,YAAY,CAACC,KAAb;AACA,UAAIC,GAAG,GAAGC,MAAM,CAACC,QAAjB;;AACA,UAAI;AACH,cAAMC,IAAI,GAAG,IAAIV,IAAJ,CAASO,GAAT,CAAb;AACA,cAAMA,GAAG,CAACI,MAAJ,EAAN;AACA,cAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACH,GAAL,CAASM,WAAT,EAAvB;AAEA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEH,QAAQ,CAAC,CAAD;AAAnB,SAAd;AACAP,QAAAA,YAAY,CAACW,OAAb,CAAqB,SAArB,EAAgCJ,QAAQ,CAAC,CAAD,CAAxC;AACAK,QAAAA,MAAM,CAACC,IAAP,CAAY,YAAZ,EAPG,CASH;;AACA,cAAMC,GAAG,GAAG,MAAMT,IAAI,CAACH,GAAL,CAASY,GAAT,CAAaC,uBAAb,EAAlB;AAEA,aAAKC,WAAL;AACA,OAbD,CAaE,OAAOC,GAAP,EAAY;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACD,KA9BkB;;AAAA,yCAgCL,MAAM;AACnB,WAAKR,QAAL,CAAc;AAACW,QAAAA,OAAO,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAAtB,OAAd;AACA,KAlCkB;;AAAA,wCAoCLE,CAAD,IAAO;AACnB,WAAKb,QAAL,CAAc;AACbW,QAAAA,OAAO,EAAE;AADI,OAAd;AAGA,KAxCkB;;AAAA,+CA0CC,MAAM;AACzBjB,MAAAA,MAAM,CAACoB,QAAP,CAAgBC,KAAhB,GAAwB,iBAAxB;AACA,KA5CkB;;AAAA,kDA8CI,MAAM,CAE5B,CAhDkB;;AAElB,SAAKH,KAAL,GAAa;AACZI,MAAAA,UAAU,EAAE,KADA;AAEZL,MAAAA,OAAO,EAAE;AAFG,KAAb;AAIA,SAAKM,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKX,WAAL,GAAmB,KAAKA,WAAL,CAAiBW,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA;;AAyCDE,EAAAA,MAAM,GAAG;AACR,WACA,4BACE,KAAKR,KAAL,CAAWD,OAAX,GAAqB,MAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKM,aAArB;AAAoC,MAAA,KAAK,EAAE,KAAKE,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAAqF,IADvF,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAHD,EAIC;AAAQ,MAAA,OAAO,EAAE,KAAKZ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAJD,CADA;AASA;;AA9D8B;;AAkEhC,eAAenB,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Web3 from 'web3';\nimport Modal from '../components/Modal';\n\nclass IndexPg extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoggedIn: false,\n\t\t\ttoggled: false,\n\t\t}\n\t\tthis.connectWallet = this.connectWallet.bind(this);\n\t\tthis.toggleModal = this.toggleModal.bind(this);\n\t\tthis.closeModal = this.closeModal.bind(this);\n\t}\n\n\tconnectWallet = async () => {\n\t\tlocalStorage.clear()\n\t\tlet eth = window.ethereum;\n\t\ttry {\n\t\t\tconst web3 = new Web3(eth);\n\t\t\tawait eth.enable();\n\t\t\tconst accounts = await web3.eth.getAccounts();\n\t\t\t\n\t\t\tthis.setState({ account: accounts[0] });\n\t\t\tlocalStorage.setItem('account', accounts[0]);\n\t\t\tRouter.push('/dashboard');\n\n\t\t\t// ABI, Contract - Connect to SpendPool Pod\n\t\t\tconst abi = await web3.eth.abi.encodeFunctionSignature();\n\n\t\t\tthis.toggleModal();\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\ttoggleModal = () => {\n\t\tthis.setState({toggled: !this.state.toggled});\n\t};\n\n\tcloseModal = (e) => {\n\t\tthis.setState({\n\t\t\ttoggled: false\n\t\t});\n\t}\n\n\tcomponentDidMount = () => {\n\t\twindow.document.title = \"Elastic Storage\";\n\t}\n\n\tcomponentWillUnmount = () => {\n\n\t};\n\n\trender() {\n\t\treturn (\n\t\t<>\n\t\t\t{this.state.toggled ? <Modal connect={this.connectWallet} close={this.closeModal}/> : null}\n\t\t\t<h1>Elastic Storage</h1>\n\t\t\t<p>A elastOS dApp built on top of Ionic and Hive with Trinity plugins.</p>\n\t\t\t<button onClick={this.toggleModal}>\n\t\t\t\tConnect your Metamask wallet\n\t\t\t</button>\n\t\t</>);\n\t}\n\n}\n\nexport default IndexPg;\n"]},"metadata":{},"sourceType":"module"}